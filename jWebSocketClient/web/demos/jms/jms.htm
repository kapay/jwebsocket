<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
		<!--
		//	****************************************************************************
		//	jWebSocket Channel Demo (uses jWebSocket Client and Server)
		//	Copyright (c) 2010 Alexander Schulze, Innotrade GmbH, Herzogenrath
		//	****************************************************************************
		//	This program is free software; you can redistribute it and/or modify it
		//	under the terms of the GNU Lesser General Public License as published by the
		//	Free Software Foundation; either version 3 of the License, or (at your
		//	option) any later version.
		//	This program is distributed in the hope that it will be useful, but WITHOUT
		//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
		//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
		//	more details.
		//	You should have received a copy of the GNU Lesser General Public License along
		//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
		//	****************************************************************************
		-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type"
			  content="text/html; charset=windows-1252">
		<title>jWebSocket JMS Demo</title>
		<link rel="stylesheet" type="text/css"
			  href="../../res/css/jwebsocket.css">
		<!-- load the jWebSocket JavaScript client library -->
		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<!-- this one imports the client side streaming plug-in -->
		<script type="text/javascript" src="../../res/js/jwsJMSPlugIn.js"></script>
		<!-- this one imports the client side streaming plug-in -->
		<!-- <script type="text/javascript" src="../../res/js/jWebSocket_bundle.js"></script> -->
		<script type="text/javascript" language="JavaScript">
			var 
			eLog = null, 
			eKeepAlive = null, 
			eMessage = null, 
			eChannelId = null, 
			eChannelName = null, 
			eAccessKey = null, 
			eSecretKey = null, 
			eIsPrivate = null, 
			eIsSystem = null, 
			eKeepAlive = null, 
			eChannelSel = null;

			function log(aString) {
				eLog.innerHTML += aString + "<br>";
				if (eLog.scrollHeight > eLog.clientHeight) {
					eLog.scrollTop = eLog.scrollHeight - eLog.clientHeight;
				}
			}

			function clearLog() {
				eLog.innerHTML = "";
				eLog.scrollTop = 0;
			}

			var lWSC = null;

			function login() {
				// URL is ws[s]://[hostname|localhost]:8787[/context][/servlet/][;args...]
				// deprecated: JWS_SERVER_URL;
				log("Login to " + jws.getDefaultServerURL() + " ...");
				try {
					var lRes = lWSC.logon( jws.getDefaultServerURL(), "guest",	"guest", {
						// OnOpen callback
						OnOpen : function(aEvent) {
							log("<font style='color:#888'>jWebSocket connection established.</font>");
							jws.$("simgStatus").src = "../../images/connected.png";
						},

						OnWelcome : function() {
							//getChannels();
						},

						// OnMessage callback
						OnMessage : function(aEvent) {
							log("<font style='color:#888'>jWebSocket message received: '"
								+ aEvent.data + "'</font>");
							if (lWSC.isLoggedIn()) {
								jws.$("simgStatus").src = "../../images/authenticated.png";
							} else {
								jws.$("simgStatus").src = "../../images/connected.png";
							}
							jws.$("slblClientId").innerHTML = "&nbsp;Client&#x2011;Id:&nbsp;"
								+ lWSC.getId()
								+ "&nbsp;"
								+ (jws.browserSupportsNativeWebSockets ? "(native)"
							: "(flashbridge)");
						},

						// OnClose callback
						OnClose : function(aEvent) {
							log("<font style='color:#888'>jWebSocket connection closed.</font>");
							jws.$("simgStatus").src = "../../images/disconnected.png";
							jws.$("slblClientId").innerHTML = "&nbsp;Client&#x2011;Id:&nbsp;-";
						}

					});
				} catch (ex) {
					log("Exception: " + ex.message);
				}
			}

			// log out the client from the jWebSocket server
			function logout() {
				if (lWSC) {
					lWSC.stopKeepAlive();
					log("Disconnecting...");
					var lRes = lWSC.close({
						timeout : 3000
					});
					log(lWSC.resultToString(lRes));
				}
			}

			function listen() {
				log("Listen...");
				lWSC.listen(jws.$("stxfConnectionFactoryName").value, jws
				.$("stxfDestinationName").value,
				jws.$("stxfPubSubDomain").checked);
			}

			function unlisten() {
				log("Unlisten...");
				lWSC.unlisten(jws.$("stxfConnectionFactoryName").value, jws
				.$("stxfDestinationName").value,
				jws.$("stxfPubSubDomain").checked);
			}

			function sendTextMessage() {
				log("Sending String Message...");
				lWSC.sendStringMessage(jws.$("stxfConnectionFactoryName").value, jws
				.$("stxfDestinationName").value,
				jws.$("stxfPubSubDomain").checked,
				jws.$("stxfStringMessage").value);
			}

			function onHandleMessageString(aEvent) {
				var msg = aEvent.msg;
				log("string message received:");
				log(msg);
			}

			function initPage() {
				eLog = jws.$("sdivChat");
				eMessage = jws.$("stxfMsg");

				if (window.WebSocket) {
					lWSC = new jws.jWebSocketJSONClient();
					lWSC.setHandleMessageCallbacks({
						OnHandleMessageString : onHandleMessageString
					});
				} else {
					var lMsg = jws.MSG_WS_NOT_SUPPORTED;
					alert(lMsg);
					log(lMsg);
				}
			}

			function exitPage() {
				lWSC.stopKeepAlive();
				logout();
			}
		</script>
	</head>

	<body onload="initPage();" onunload="exitPage();">
		<!--	remarked temporarily due to chrome 5 browser bug
		<script type="text/javascript">
			var lFrameElem = this.frameElement;
			if( !lFrameElem ) {
				location.replace( "../../index.htm?page=demos/streaming/streaming.htm" );
			}
		</script>
		-->
		<table class="tblHeader" width="100%" cellspacing="0" cellpadding="0">
			<tr>
				<td class="tdHeader" width="">jWebSocket JMS Demo</td>
				<td class="tdHeader" width="1%"><img id="simgStatus"
													 src="../../images/disconnected.png" align="right" />
				</td>
				<td class="tdHeader" width="1%"><span id="slblClientId">&nbsp;Client&#x2011;Id:&nbsp;-</span>
				</td>
			</tr>
		</table>
		<p>This demo shows how messages can be retrieved and broadcasted
		using a publish/subscribe or point-to-point mechanism based on JMS.</p>
		<div id="sdivChat" class="sdivContainer"
			 style="position: relative; height: 300px; overflow: auto;"></div>

		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0"
				   width="100%">
				<tr class="strDlg">
					<td class="stdDlg" width="5"><input class="sbtnDlg"
														id="sbtnConnect" type="button" value="Login" onclick="login();"
														title="Authenticates you against the jWebSocket Server (using 'guest' account).">
					</td>
					<td class="stdDlg" width="5"><input class="sbtnDlg"
														id="sbtnDisconnect" type="button" value="Logout"
														onclick="logout();"
														title="Logs you out and disconnects from the jWebSocket server.">
					</td>
					<td class="stdDlg" width="5">&nbsp;ConnectionFactory Name:</td>
					<td width="70"><input class="stxfDlg"
										  id="stxfConnectionFactoryName" type="text"
										  value="connectionFactory" style="width: 99%"
										  title="Name of the ConnectionFactory for creating JMS connections.">
					</td>

				</tr>
				<tr class="strDlg">
					<td width=""><input class="sbtnDlg" id="sbtnListen"
										type="button" value="Listen" onclick="listen();" title="Listen to a JMS destination.">
					</td>
					<td class="stdDlg" width="5"><input class="sbtnDlg"
														id="sbtnClear" type="button" value="Clear Log"
														onclick="clearLog();"
														title="Clears the result and event log above."></td>
					<td class="stdDlg" width="5">&nbsp;Destination Name:</td>

					<td width="70"><input class="stxfDlg" id="stxfDestinationName"
										  type="text" value="testQueue" style="width: 99%"
										  title="Enter the name of a JMS destination."></td>
				</tr>
				<tr class="strDlg">
					<td width=""><input class="sbtnDlg" id="sbtUnlisten"
										type="button" value="Unlisten" onclick="unlisten();"
										title="Unlisten from a JMS destination."></td>
					<td width=""><input class="sbtnDlg" id="sbtnSendTextMessage"
										type="button" value="Send Msg" onclick="sendTextMessage();"
										title="Send a text message."></td>
					<td class="stdDlg" width="5">&nbsp;String Message:</td>
					<td width="70"><input class="stxfDlg" id="stxfStringMessage"
										  type="text" value="stringMessage" style="width: 99%"
										  title="Enter the content of text message"></td>
				</tr>
				<tr class="strDlg">
					<td width=""></td>
					<td width=""></td>
					<td class="stdDlg" width="5">&nbsp;Topic:</td>
					<td width="70"><input class="stxfDlg" id="stxfPubSubDomain"
										  type="checkbox" title="isPubSubDomain"></td>
				</tr>
			</table>
		</div>

	</body>
</html>
