<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>jWebSocket-Parent</artifactId>
		<groupId>org.jwebsocket</groupId>
		<version>1.0</version>
	</parent>
	<groupId>org.jwebsocket</groupId>
	<artifactId>jWebSocketJetty</artifactId>
	<packaging>war</packaging>
	<name>jWebSocketJetty</name>
	<url>http://maven.apache.org</url>
	<description>Project within jWebSocket</description>
	<version>1.0</version>

	<build>
		<finalName>jWebSocketJetty</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<reportOutputDirectory>${project.build.directory}/../../jWebSocketClient/web/javadocs/${project.name}</reportOutputDirectory>
					<stylesheetfile>${project.build.directory}/../../jWebSocketClient/web/javadocs/stylesheet.css</stylesheetfile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<!-- <version>2.1-beta-1</version> -->
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warName>${project.name}-${project.version}</warName>
					<outputDirectory>${project.build.directory}/../../../../rte/jWebSocket-${project.version}/libs</outputDirectory>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>../jWebSocketClient/web</directory>
							<!-- disable filtering! otherwise flash swf files get destroyed! -->
							<filtering>false</filtering>
							<excludes>
								<!-- don't include documentation in the .war -->
								<exclude>**/javadocs/**</exclude>
								<exclude>**/quickguide/**</exclude>
								<exclude>**/devguide/**</exclude>
							</excludes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.0.0.M1</version>
				<configuration>
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<webAppSourceDirectory>../jWebSocketClient/web</webAppSourceDirectory>
					<webAppConfig>
						<contextPath>/jWebSocket</contextPath>
<!--
						<tempDirectory>${project.build.directory}/work</tempDirectory>
						<defaultsDescriptor>src/main/resources/webdefault.xml</defaultsDescriptor>
						<overrideDescriptor>src/main/resources/override-web.xml</overrideDescriptor>
-->
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>endorsed</id>
			<activation>
				<property>
					<name>sun.boot.class.path</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.0.2</version>
						<configuration>
                            <!-- javaee6 contains upgrades of APIs contained within the JDK itself.
                                 As such these need to be placed on the bootclasspath, rather than classpath of the
                                 compiler.
                                 If you don't make use of these new updated API, you can delete the profile.
                                 On non-SUN jdk, you will need to create a similar profile for your jdk, with the similar property as sun.boot.class.path in Sun's JDK.-->
							<compilerArguments>
								<bootclasspath>${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path}</bootclasspath>
							</compilerArguments>

						</configuration>
						<dependencies>
							<dependency>
								<groupId>javax</groupId>
								<artifactId>javaee-endorsed-api</artifactId>
								<version>6.0</version>
							</dependency>
						</dependencies>
<!--
						<executions>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
-->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-websocket</artifactId>
			<version>8.0.0.M1</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>8.0.0.M1</version>
		</dependency>
		<!-- requires jWebSocket Server Module -->
		<dependency>
			<groupId>org.jwebsocket</groupId>
			<artifactId>jWebSocketServer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jwebsocket</groupId>
			<artifactId>jWebSocketServerAPI</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jwebsocket</groupId>
			<artifactId>jWebSocketCommon</artifactId>
			<version>${project.version}</version>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>java.net2</id>
			<name>Repository hosting the jee6 artifacts</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
	</repositories>

</project>
